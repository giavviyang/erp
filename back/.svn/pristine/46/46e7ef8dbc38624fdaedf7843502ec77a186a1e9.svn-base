<template>
  <div class="app-container-padding">
    <el-form :model="queryParams" ref="queryForm" size="mini" :inline="true" class="iptAndBtn">
      <el-form-item label="发货日期" class="daterange">
        <el-date-picker
          v-model="deliverDateRange"
          type="daterange"
          range-separator="至"
          start-placeholder="开始日期"
          end-placeholder="结束日期"
          value-format="yyyy-MM-dd" @change="handleQuery">
        </el-date-picker>
      </el-form-item>
      <el-button type="primary" icon="el-icon-search" size="mini" @click="handleQuery">搜索</el-button>
      <el-button icon="el-icon-refresh" size="mini" @click="resetQuery">重置</el-button>
    </el-form>
    <div class="btn">
      <el-button
        type="primary"
        icon="el-icon-s-order"
        size="mini"
        @click="handleDetails"
        v-hasPermi="['sales:deliver:detailsView']"
      >查看明细
      </el-button>
      <el-button
        type="primary"
        icon="el-icon-plus"
        size="mini"
        @click="handleAdd"
        v-hasPermi="['sales:deliver:saveDeliver']"
      >新增发货
      </el-button>
      <el-button
        type="primary"
        icon="el-icon-edit"
        size="mini"
        @click="handleUpdate"
        v-hasPermi="['sales:deliver:updateDeliver']"
      >编辑发货
      </el-button>
      <el-button
        type="primary"
        icon="el-icon-delete"
        size="mini"
        v-hasPermi="['sales:deliver:delDeliver']"
        @click="handleDelete">删除发货
      </el-button>
      <el-button
        type="primary"
        icon="el-icon-document-checked"
        size="mini"
        v-hasPermi="['sales:deliver:reviewDeliver']"
        @click="handleCheck">发货审核
      </el-button>
      <el-button
        type="primary"
        icon="el-icon-document-delete"
        size="mini"
        v-hasPermi="['sales:deliver:cancelReview']"
        @click="handleRemoveCheck">发货消审
      </el-button>
      <el-button
        type="primary"
        icon="el-icon-folder-add"
        size="mini"
        v-hasPermi="['sales:deliver:uploadReceipt']"
        @click="handleReceipt">新增回执
      </el-button>
      <el-button
        type="primary"
        icon="el-icon-document"
        size="mini"
        v-hasPermi="['sales:deliver:queryReceiptData']"
        @click="handleReceiptRecord">回执记录
      </el-button>
      <Print typeId="fhgl" @toPrint="toPrint"></Print>
      <el-dropdown>
        <el-button type="primary" size="mini" v-hasPermi="['sales:deliver:exportDeliverBus']">
          <i class="iconfont icon-daochuwenjian"></i>导出<i class="el-icon-arrow-down el-icon--right"></i>
        </el-button>
        <el-dropdown-menu slot="dropdown">
          <el-dropdown-item @click.native="handleExport(0)"><i class="iconfont icon-daochuwenjian"></i>导出发货单
          </el-dropdown-item>
          <el-dropdown-item @click.native="handleExport(1)"><i class="iconfont icon-daochuwenjian"></i>导出发货单明细
          </el-dropdown-item>
        </el-dropdown-menu>
      </el-dropdown>

    </div>
    <count-table class="deliverTable" @handleChange="handleChange" :pageSize="pageSize" :pageNum="pageNum"
                 :total="total" :summation="summation">
      <el-table highlight-current-row
                :data="deliverList"
                stripe
                border
                style="width: 100%"
                height="100%"
                ref="multipleTable"
                @selection-change="handleSelectionChange"
                @row-click="handleRowClick"
                slot="table">
        <el-table-column
          type="selection"
          width="55">
        </el-table-column>
        <el-table-column
          :index="getIndex"
          type="index"
          label="序号"
          width="55" show-overflow-tooltip>
        </el-table-column>
        <el-table-column
          v-for="(item,index) in deliverColumns"
          :key="index"
          :label="item.label"
          :prop="item.prop"
          :min-width="item.width"
          :type="item.type"
          show-overflow-tooltip>
          <el-table-column :prop="item.prop" show-overflow-tooltip min-width="100" :min-width="item.width">
            <template #header scoped-slot="scope">
              <!--可根据类型来显示为搜索框、下拉框等-->
              <el-input
                v-model="queryParams[item.prop]"
                v-if="item.type==='ipt'"
                size="mini"
                placeholder="请输入"
                clearable @keyup.enter.native="handleQuery"/>
              <el-select v-if="item.type=='select'" v-model="queryParams[item.prop]" placeholder='请选择' clearable
                         size="mini" ref='statusSelect' @change="handleQuery">
                <el-option
                  v-for="orderItem in deliverStatusOptions"
                  :key="orderItem.value"
                  :label="orderItem.label"
                  :value="orderItem.value">
                </el-option>
              </el-select>
            </template>
            <template slot-scope="scope">
              <template v-if="item.prop.includes('Status')">
                <span v-show="scope.row[item.prop]==0">审核通过</span>
                <span v-show="scope.row[item.prop]==1">审核未通过</span>
                <span v-show="scope.row[item.prop]==2">未审核</span>
              </template>
              <template v-if="!item.prop.includes('Status')">
                {{ scope.row[item.prop] }}
              </template>
            </template>
          </el-table-column>
        </el-table-column>
      </el-table>
    </count-table>
    <!--  查看明细弹窗  -->
    <el-dialog title='查看明细'
               :visible.sync="detailDialog" width="80%" class="dialog-style detailDialog"
               :close-on-click-modal="false" :close-on-press-escape="false" :destroy-on-close="true">
      <div class="detailsInfo">
        <p v-for="(item,index) in detailsInfo" :key="index">{{ item.title }}：<span>{{ item.value }}</span></p>
      </div>
      <slot-table class="detailsTable">
        <el-table highlight-current-row
                  :data="detailDialogData"
                  border
                  stripe
                  height="100%"
                  style="width: 100%" slot="table" ref="dialogTable">
          <el-table-column
            type="index"
            label="序号"
            width="50">
          </el-table-column>
          <el-table-column
            label="打包编号"
            v-if="detailsInfo[7].value == '打包发货'"
            prop="packNo"
          >
          </el-table-column>
          <el-table-column
            v-for="(item,index) in detailDialogColumns"
            :key="index"
            :prop="item.prop"
            :label="item.label"
            :min-width="item.width"
            show-overflow-tooltip></el-table-column>
        </el-table>
      </slot-table>
    </el-dialog>
    <!--  审核  -->
    <el-dialog title="发货审核" :visible.sync="checkDialog" width="500px" class="dialog-style checkDialog"
               :close-on-click-modal="false" :close-on-press-escape="false" :destroy-on-close="true" append-to-body>
      <el-form size="mini" :model="checkForm" :rules="checkRules" ref="checkForm" label-width="100px">
        <el-form-item label="审核" prop="reviewCode">
          <el-radio-group v-model="checkForm.reviewCode">
            <el-radio label='0'>通过</el-radio>
            <el-radio label="1">未通过</el-radio>
          </el-radio-group>
        </el-form-item>
        <el-form-item label="审核人" prop="reviewPerson">
          <el-input v-model="checkForm.reviewPerson" disabled size="mini" placeholder="请输入审核人"></el-input>
        </el-form-item>
        <el-form-item label="不通过原因" prop="reviewReason" v-if="checkForm.reviewCode==1">
          <el-input v-model="checkForm.reviewReason" clearable size="mini" placeholder="请输入不通过原因" type="textarea"></el-input>
        </el-form-item>
      </el-form>
      <span slot="footer" class="dialog-footer">
        <el-button type="primary" size="mini" @click="submitCheck('checkForm')">审核</el-button>
         <el-button size="mini" @click="checkDialog=false">取消</el-button>
       </span>
    </el-dialog>
    <!--  新增回执  -->
    <el-dialog title='新增回执'
               :visible.sync="receiptDialog" width="70%" class="dialog-style receiptDialog"
               :close-on-click-modal="false" :close-on-press-escape="false" :destroy-on-close="true">
      <div
        style="width: 100%;display: flex;justify-content: space-between;height: 40%;min-height: 210px;overflow: auto">
        <el-form :model="receiptInfoForm" size="mini" class="ipt2" :inline="true" :rules="receiptRules"
                 ref="receiptInfoForm">
          <el-form-item label="回执编号" prop="receiptNo">
            <el-input v-model="receiptInfoForm.receiptNo" clearable placeholder="请输入回执编号"/>
          </el-form-item>
          <el-form-item label="回执负责人" prop="receiptPerson">
            <el-input v-model="receiptInfoForm.receiptPerson" clearable placeholder="请输入回执负责人"/>
          </el-form-item>
          <el-form-item label="回执日期" prop="receiptNo">
            <el-date-picker
              v-model="receiptInfoForm.receiptDate"
              type="datetime"
              placeholder="选择日期时间"
              value-format="yyyy-MM-dd"
              clearable>
            </el-date-picker>
          </el-form-item>
          <el-form-item label="备注" prop="remarks" class="remarks">
            <el-input type="textarea" v-model="receiptInfoForm.remarks" clearable size="mini" placeholder="请输入内容"/>
          </el-form-item>
        </el-form>
        <slot-table class="receiptTable">
          <el-table highlight-current-row
                    :data="shelfData"
                    border
                    stripe
                    height="100%"
                    style="width: 100%" slot="table">
            <el-table-column
              type="index"
              label="序号"
              width="50">
            </el-table-column>
            <el-table-column
              v-for="(item,index) in shelfColumns"
              :key="index"
              :prop="item.prop"
              :label="item.label"
              :min-width="item.width"
              show-overflow-tooltip>
            </el-table-column>
            <el-table-column
              label="回执数量"
              width="200">
              <template slot-scope="scope">
                <el-input-number size="mini" v-model="scope.row.operationNum" :min="1"
                                 style="width: 150px;"></el-input-number>
              </template>
            </el-table-column>
          </el-table>
        </slot-table>
      </div>
      <div style="display: flex;justify-content: space-between;height: 50px;">
        <div class="btn">
          <el-button
            type="primary"
            icon="el-icon-paperclip"
            size="mini" @click="handleUpload">回执文件上传
          </el-button>
        </div>
      </div>
      <slot-table class="receiptFileTable" :is-page="false">
        <el-table highlight-current-row
                  :data="receiptFileData"
                  border
                  stripe
                  height="100%"
                  style="width: 100%" slot="table">
          <el-table-column
            type="index"
            label="序号"
            width="50">
          </el-table-column>
          <el-table-column
            v-for="(item,index) in receiptFileColumns"
            :key="index"
            :prop="item.prop"
            :label="item.label"
            :min-width="item.width"
            show-overflow-tooltip>
          </el-table-column>
          <el-table-column
            label="操作"
            width="150" class-name="operation">
            <template slot-scope="scope">
              <el-button type="text" size="mini" @click="downloadReceiptFile(scope.row)">下载</el-button>
              <el-button type="text" size="mini" @click="delReceiptFile(scope.row.id)">移除</el-button>
            </template>
          </el-table-column>
        </el-table>
      </slot-table>
      <!--  上传附件  -->
      <el-dialog title="回执文件上传" :visible.sync="uploadFileDialog" width="30%" class="dialog-style uploadFileDialog"
                 :close-on-click-modal="false" :close-on-press-escape="false" :destroy-on-close="true" append-to-body
                 :before-close="handleClose">
        <el-upload drag
                   :auto-upload="false"
                   :action="uploadUrl()"
                   :on-change="fileChange"
                   :on-remove="handleRemove"
                   :file-list="fileList">
          <i class="el-icon-upload"></i>
          <div class="el-upload__text">将文件拖到此处，或<em>点击上传</em></div>
          <!--        <div class="el-upload__tip" slot="tip">只能上传xlsx文件，且不超过10M</div>-->
        </el-upload>
        <span slot="footer" class="dialog-footer">
        <el-button type="primary" size="mini" @click="submitUpload">上传</el-button>
          <!--         <el-button size="mini" @click="uploadFileDialog=false;fileList=[]">取消</el-button>-->
         <el-button size="mini" @click="cancelUpload">取消</el-button>
       </span>
      </el-dialog>
      <span slot="footer" class="dialog-footer">
        <el-button type="primary" size="mini" @click="saveReceipt('receiptInfoForm')">保存</el-button>
        <el-button size="mini" @click="cancelReceipt">返回</el-button>
       </span>
    </el-dialog>
    <!--  回执记录  -->
    <el-dialog title='回执记录'
               :visible.sync="receiptRecord" width="70%" class="dialog-style receiptRecord"
               :close-on-click-modal="false" :close-on-press-escape="false">
      <slot-table class="receiptRecordTable">
        <el-table highlight-current-row
                  :data="receiptRecordData"
                  stripe
                  border
                  style="width: 100%"
                  height="100%"
                  ref="receiptRecordTable"
                  slot="table"
                  @row-click="receiptClick"
        >
          <el-table-column
            type="index"
            label="序号"
            width="50">
          </el-table-column>
          <el-table-column
            v-for="item in receiptRecordColumn"
            :key="item.id"
            :label="item.label"
            :prop="item.prop" show-overflow-tooltip :min-width="item.width">
          </el-table-column>
        </el-table>
      </slot-table>
      <div class="tabBtn">
        <el-tabs v-model="activeName" @tab-click="handleClick">
          <el-tab-pane label="货架信息" name="shelf">
            <slot-table class="receiptTable">
              <el-table highlight-current-row
                        :data="receiptShelfData"
                        border
                        stripe
                        height="100%"
                        style="width: 100%" slot="table">
                <el-table-column
                  type="index"
                  label="序号"
                  width="50">
                </el-table-column>
                <el-table-column
                  v-for="(item,index) in receiptShelfColumn"
                  :key="index"
                  :prop="item.prop"
                  :label="item.label"
                  :min-width="item.width"
                  show-overflow-tooltip>
                </el-table-column>
              </el-table>
            </slot-table>
          </el-tab-pane>
          <el-tab-pane label="文件信息" name="file">
            <slot-table class="receiptFileTable">
              <el-table highlight-current-row
                        :data="deliverReceiptFileData"
                        border
                        stripe
                        height="100%"
                        style="width: 100%" slot="table">
                <el-table-column
                  type="index"
                  label="序号"
                  width="50">
                </el-table-column>
                <el-table-column
                  v-for="(item,index) in deliverReceiptFileColumns"
                  :key="index"
                  :prop="item.prop"
                  :label="item.label"
                  :min-width="item.width"
                  show-overflow-tooltip>
                </el-table-column>
                <el-table-column
                  label="操作"
                  width="150" class-name="operation">
                  <template slot-scope="scope">
                    <el-button type="text" size="mini" @click="downloadReceiptFile(scope.row)">下载</el-button>
                    <el-button type="text" size="mini" @click="delReceiptFile(scope.row.id)">移除</el-button>
                  </template>
                </el-table-column>
              </el-table>
            </slot-table>
          </el-tab-pane>
        </el-tabs>
      </div>
    </el-dialog>
  </div>
</template>

<script>

import SlotTable from "@/components/public/table/SlotTable";
import {Message} from "element-ui";
import {getCurrentDay, keepThreeNum, sum} from "@/utils/order/order";
import {
  queryDeliver,
  detailsView,
  delDeliver,
  cancelReview,
  reviewDeliver,
  queryReceiptData,
  queryReceipt,
  queryDeliverShelf,
  receiptShelf,
  uploadReceipt,
  downloadReceiptFile,
  delReceiptFile
} from "@/api/salse/deliver";
import CountTable from "@/components/public/table/countTable";
import {getInfo} from "@/api/login";
import Print from "@/components/Print/index"

export default {
  name: "index",
  components: {CountTable, SlotTable,Print},
  data() {
    return {
      //查询参数
      queryParams: {
        customNo: "",
        customerName: "",
        deliverAddress: "",
        deliverDateEnd: "",
        deliverDateStart: "",
        deliverMode: "",
        deliverNo: "",
        deliverPerson: "",
        deliverStatus: null,
        entryName: "",
        id: "",
        isDel: 0,
        orderId: "",
        orderNo: "",
        pageNum: 1,
        pageSize: 20,
        productName: "",
        receiptNo: "",
        reviewPerson: ""
      },
      deliverDateRange: [], //发货日期范围
      pageSize: 20,
      pageNum: 1,
      total: 0,
      //总合计
      summation: [
        {label: 'allDeliverNum', title: '发货数量', value: 0, unit: '片'},
        {label: 'deliverArea', title: '发货面积', value: 0, unit: 'm²'},
        {label: 'deliverWeight', title: '发货重量', value: 0, unit: 't'},
        {label: 'deliverCost', title: '发货金额', value: 0, unit: '元'},
      ],
      deliverList: [],  //发货列表
      //发货表头
      deliverColumns: [
        {label: '发货编号', prop: 'deliverNo', width: '150', type: 'ipt'},
        {label: '审核状态', prop: 'deliverStatus', width: '100', type: 'select'},
        {label: '订单编号', prop: 'orderNo', width: '150', type: 'ipt'},
        {label: '客户名称', prop: 'customerName', width: '120', type: 'ipt'},
        {label: '项目名称', prop: 'entryName', width: '180', type: 'ipt'},
        // {label: '产品名称', prop: 'productName', width: '180', type: 'ipt'},
        {label: '发货方式', prop: 'deliverMode', width: '100', type: 'ipt'},
        {label: '发货负责人', prop: 'deliverPerson', width: '120', type: 'ipt'},
        {label: '发货日期', prop: 'deliverDate', width: '180'},
        {label: '客户地址', prop: 'deliverAddress', width: '220', type: 'ipt'},
        {label: '发货数量（片）', prop: 'allDeliverNum', width: '120'},
        {label: '发货重量（t）', prop: 'deliverWeight', width: '100'},
        {label: '发货面积（m²）', prop: 'deliverArea', width: '120'},
        {label: '发货金额（元）', prop: 'deliverCost', width: '120'},
        {label: '回执负责人', prop: 'receiptPerson', width: '100'},
        {label: '回执日期', prop: 'receiptDate', width: '180'},
        {label: '备注', prop: 'deliverRemarks'},
      ],
      deliverStatusOptions: [
        {
          value: 0,
          label: '审核通过'
        },
        {
          value: 1,
          label: '审核未通过'
        },
        {
          value: 2,
          label: '未审核'
        },
      ],
      selected: [],   //选中发货单
      detailDialog: false,
      detailsInfo: [
        {title: '发货编号', label: 'deliverNo', value: ''},
        {title: '发货负责人', label: 'deliverPerson', value: ''},
        {title: '发货客户', label: 'customerName', value: ''},
        {title: '联系人电话', label: 'deliverPhone', value: ''},
        {title: '发货地址', label: 'deliverAddress', value: ''},
        {title: '发货时间', label: 'deliverDate', value: ''},
        {title: '发货金额（元）', label: 'deliverCost', value: ''},
        {title: '发货类型', label: 'deliverType', value: ''},
        {title: '备注', label: 'deliverRemarks', value: ''},
      ],  //明细
      detailDialogData: [],  //明细
      detailDialogColumns: [
        {label: '订单编号', prop: 'orderNo', type: 'ipt', width: '120'},
        {label: '自定义编号', prop: 'customNo', type: 'ipt', width: '120'},
        {label: '客户名称', prop: 'customerName', type: 'ipt', width: '200'},
        {label: '项目名称', prop: 'entryName', type: 'ipt', width: '200'},
        {label: '产品名称', prop: 'productName', type: 'date', width: '200'},
        {label: '宽', prop: 'wideHead', type: 'ipt'},
        {label: '高', prop: 'highHead'},
        {label: '产品数量（片）', prop: 'num', width: '200'},
        {label: '发货数量（片）', prop: 'orderDeliverNum', width: '120'},
      ],
      checkDialog: false, //审核
      checkForm: {
        deliverId: '',
        reviewCode: '0',  //审核结果  0 通过  1  不通过
        reviewPerson: '',
        reviewReason: '',
      },
      receiptDialog: false,  //回执单管理
      receiptInfoForm: {
        id: '',
        receiptNo: '',
        receiptPerson: '',
        receiptDate: getCurrentDay(),
        remarks: '',
        deliveryShelfList: []
      },
      shelfData: [],  //货架数据
      shelfColumns: [
        // {label: '货架类型', prop: 'shelfType', width: '100'},
        {label: '货架名称', prop: 'frameName', width: '150'},
        {label: '货架编号', prop: 'frameNo', width: '150'},
        {label: '货架规格', prop: 'frameSpecs', width: '150'},
        {label: '货架数量', prop: 'frameNum', width: '100'},
        // {label: '回执数量', prop: 'receiptNum', width: '100'},
      ],
      receiptFileData: [],  //回执文件
      receiptFileColumns: [
        {label: '文件名称', prop: 'fileName', width: '150'},
        {label: '文件地址', prop: 'fileAddress', width: '300'},
      ],
      uploadFileDialog: false,   //上传附件
      limitNum: 1,
      fileList: [],
      receiptRecord: false,
      recordParams: {
        receiptPerson: '',
      },
      receiptRecordData: [],
      receiptRecordColumn: [
        {label: '回执编号', prop: 'receiptNo', width: '150'},
        {label: '回执人', prop: 'receiptPerson', width: '150'},
        {label: '回执日期', prop: 'receiptDate', width: '150'},
        {label: '备注', prop: 'remarks', width: '150'},
      ],
      receiptShelfData: [],
      receiptShelfColumn: [
        {label: '货架名称', prop: 'frameName', width: '150'},
        {label: '货架编号', prop: 'frameNo', width: '150'},
        {label: '货架规格', prop: 'frameSpecs', width: '150'},
        {label: '回执数量', prop: 'num', width: '100'},
      ],
      deliverReceiptFileData: [],  //回执文件
      deliverReceiptFileColumns: [
        {label: '文件名称', prop: 'fileName', width: '150'},
        {label: '文件地址', prop: 'fileAddress', width: '300'},
      ],
      activeName: 'shelf',
      checkRules: {
        reviewCode: [
          {required: true, message: '请选择审核结果', trigger: 'change'}
        ],
        reviewPerson: [
          {required: true, message: '请输入审核人', trigger: 'change'}
        ],
        reviewReason: [
          {required: true, message: '请输入审核不通过原因', trigger: 'change'}
        ],
      },
      receiptRules: {
        receiptNo: [{max: 10, message: '字符长度最大不得超过10', trigger: 'blur'}],
        receiptPerson: [
          {required: true, message: '回执负责人不能为空', trigger: 'blur'},
          {max: 10, message: '字符长度最大不得超过10', trigger: 'blur'}
        ],
        receiptDate: [
          {required: true, message: '回执日期不能为空', trigger: 'blur'}
        ],
        remarks: [{max: 125, message: '字符长度最大不得超过125', trigger: 'blur'}],
      }
    }
  },
  created() {
    this.handleQuery();
  },
  mounted() {
    // this.keyupSubmit();
    var multipleTable = this.$refs.multipleTable.$refs.bodyWrapper
    multipleTable.addEventListener('scroll', () => {
      // 滚动距离
      const scrollLeft = multipleTable.scrollLeft;
      // this.$refs.multipleTable.$refs.bodyWrapper.scrollLeft = scrollLeft
      this.$refs.multipleTable.$refs.headerWrapper.scrollLeft = scrollLeft
    })
  },
  updated() {
    this.$nextTick(() => {
      this.$refs.multipleTable.doLayout();
      if (this.detailDialog) {
        this.$refs.dialogTable.doLayout();
      }
    })
  },
  methods: {
    toPrint(printId) {
      if (this.selected.length != 1) {
        Message.warning("请选择要打印的发货单")
        return false;
      }
      /**
       * data为模板所需要参数
       * 例如需要根据id查询模板数据
       */

      let data = {deliverNo: this.selected[0].deliverNo}
      const {href} = this.$router.resolve({
        path: '/print',
        query: {printId, ...data}
      })
      window.open(href, '_blank')
    },
    //键盘按下enter搜索事件
    keyupSubmit() {
      document.onkeydown = e => {
        const _key = window.event.keyCode
        if (_key === 13) {
          this.handleQuery();
        }
      }
    },
    /* 订单查询 */
    handleQuery() {
      if (this.deliverDateRange) {
        this.queryParams.deliverDateStart = this.deliverDateRange[0];
        this.queryParams.deliverDateEnd = this.deliverDateRange[1];
      }
      queryDeliver(this.queryParams).then(res => {
        this.total = res.count;
        this.deliverList = res.data;
        if (this.deliverList) {
          this.summation = [
            {label: 'allDeliverNum', title: '发货数量', value: 0, unit: '片'},
            {label: 'deliverArea', title: '发货面积', value: 0, unit: 'm²'},
            {label: 'deliverWeight', title: '发货重量', value: 0, unit: 't'},
            {label: 'deliverCost', title: '发货金额', value: 0, unit: '元'},
          ];
          this.deliverList.forEach(item => {
            this.summation.forEach(sumItem => {

              if (item.hasOwnProperty(sumItem.label)) {
                sumItem.value += item[sumItem.label]
              }
              sumItem.value = keepThreeNum(sumItem.value);
            })
          })
        }
      })
    },
    /* 重置 */
    resetQuery() {
      this.deliverDateRange = [];
      this.queryParams = {
        customNo: "",
        customerName: "",
        deliverAddress: "",
        deliverDateEnd: "",
        deliverDateStart: "",
        deliverMode: "",
        deliverNo: "",
        deliverPerson: "",
        deliverStatus: null,
        entryName: "",
        id: "",
        orderId: "",
        orderNo: "",
        pageNum: 1,
        pageSize: 20,
        productName: "",
        receiptNo: "",
        reviewPerson: ""
      };
      this.handleQuery();
    },
    // 是否显示下拉框
    isShowSelectOptions(isShowSelectOptions) {
      if (!isShowSelectOptions) {
        this.$refs.statusSelect.forEach(item => {
          item.blur();
          this.handleQuery();
        })
      }
    },
    /* 查看明细 */
    handleDetails() {
      if (this.selected.length <= 0) {
        Message.warning("请选择要查看的数据");
        return false
      }
      if (this.selected.length > 1) {
        Message.warning("请选择一条数据进行查看");
        return false
      }
      if (this.selected.length == 1) {
        this.detailDialog = true;
        detailsView({deliverId: this.selected[0].id}).then(res => {
          this.detailsInfo.forEach(item => {
            if (res.data.hasOwnProperty(item.label)) {
              item.value = res.data[item.label]
              if (item.label === 'deliverType') {
                if (res.data.deliverType == 0) {
                  item.value = "订单发货"
                } else if (res.data.deliverType == 1) {
                  item.value = "打包发货"
                }
              }
            }
          })
          this.detailDialogData = res.data.deliverBusinessList;
        })
      }
    },
    /* 新增发货 */
    handleAdd() {
      this.$router.push('/sales/deliver/addDeliver');
    },
    /* 编辑发货 */
    handleUpdate() {
      // console.log(this.selected)
      if (this.selected.length <= 0) {
        Message.warning("请选择要修改的数据");
        return false
      }
      if (this.selected.length > 1) {
        Message.warning("请选择一条数据进行修改");
        return false
      }
      if (this.selected.length === 1) {
        console.log(this.selected)
        if (this.selected[0].deliverStatus != 2) {
          Message.warning("发货单已审核，无法继续编辑");
        } else {
          this.returnInfo = JSON.parse(JSON.stringify(this.selected[0]));
          this.$router.push('/sales/deliver/updateDeliver/' + this.selected[0].id);
        }
      }
    },
    /* 废置发货单 */
    handleDelete() {
      if (this.selected.length <= 0) {
        Message.warning("请选择要删除的数据");
        return false
      } else {
        if (this.selected[0].deliverStatus != 2) {
          Message.warning("发货单已审核，无法删除");
        } else {
          this.$confirm('此操作将删除选中数据，是否继续?', '提示', {
            confirmButtonText: '确定',
            cancelButtonText: '取消',
            type: 'warning',
          }).then(() => {
            let ids = [];
            this.selected.forEach(item => {
              ids.push(item.id)
            })
            delDeliver({deliverIds: ids.toString()}).then(res => {
              if (res.code == 200) {
                this.$message.success(res.msg)
                this.handleQuery();
              } else {
                this.$message.error(res.msg)
                this.handleQuery();
              }
            })
          }).catch(() => {
            this.$message({
              type: 'info',
              message: '已取消删除'
            });
          });
        }
      }
    },
    /* 审核 */
    handleCheck() {
      if (this.selected.length <= 0) {
        Message.warning("请选择要审核的数据");
        return false
      }
      if (this.selected.length > 1) {
        Message.warning("请选择一条数据进行审核");
        return false
      }
      if (this.selected.length === 1) {
        if (this.selected[0].deliverStatus != 2) {
          Message.warning("发货单已审核，无法再次审核");
        } else {
          this.checkDialog = true;
          this.checkForm.reviewCode = '0';
          /*查询登录信息*/
          this.checkForm.reviewPerson = localStorage.getItem("nickName");

        }
      }
    },
    /* 保存审核 */
    submitCheck(formName) {
      this.$refs[formName].validate((valid) => {
        if (valid) {
          this.checkForm.deliverId = this.selected[0].id;
          this.checkDialog = false;
          reviewDeliver(this.checkForm).then(res => {
            if (res.code === 200) {
              Message.success(res.msg);
            } else {
              Message.warning(res.msg);
            }
            this.handleQuery();
          }).catch(err => {
            Message.warning(err.msg);
          })
        } else {
          return false;
        }
      })
    },
    /* 消审 */
    handleRemoveCheck() {
      if (this.selected.length != 1) {
        Message.warning("请选择要消审的数据");
        return false
      }
      if (this.selected[0].receiptDate){
        Message.warning("请选择无回执记录的发货单");
        return false
      }
      if (this.selected.length == 1) {
        if (this.selected[0].deliverStatus == 2) {
          Message.warning("发货单未审核，无法继续消审");
        } else {
          this.$confirm('此操作将消除当前审核，是否继续?', '提示', {
            confirmButtonText: '确定',
            cancelButtonText: '取消',
            type: 'warning',
          }).then(() => {
            let ids = [];
            this.selected.forEach(item => {
              ids.push(item.id)
            })
            cancelReview({deliverId: this.selected[0].id}).then(res => {
              if (res.code == 200) {
                this.$message.success(res.msg)
                this.handleQuery();
              } else {
                this.$message.error(res.msg)
                this.handleQuery();
              }
            })
          }).catch(() => {
            this.$message({
              type: 'info',
              message: '已取消消审'
            });
          });
        }
      }
      /* cancelReview({deliverId: this.selected[0].id}).then(res => {
         if (res.code == 200) {
           this.$message.success(res.msg)
           this.handleQuery();
         } else {
           this.$message.error(res.msg)
           this.handleQuery();
         }
       })*/
    },
    /* 回执单管理 */
    handleReceipt() {
      if (this.selected.length != 1) {
        Message.warning("请选择一条数据进行新增回执单");
        return false;
      }
      if (this.selected[0].deliverStatus != 0) {
        Message.warning("请选择已审核的发货订单");
        return false;
      }
      if (this.selected.length === 1) {
        this.receiptDialog = true;
        this.receiptInfoForm = {
          id: this.generateUUID(),
          deliverId: this.selected[0].id,
          deliverNo: this.selected[0].deliverNo,
          receiptNo: '',
          receiptPerson: '',
          receiptDate: getCurrentDay(),
          remarks: '',
          deliveryShelfList: []
        }
        this.receiptFileData = [];
        getInfo().then(res => {
          if (res.code === 200) {
            this.receiptInfoForm.receiptPerson = res.user.nickName;
          }
        })
        detailsView({deliverId: this.selected[0].id}).then(res => {
          this.shelfData = res.data.deliveryShelfList;
        })
      }
    },
    /* 回执记录 */
    handleReceiptRecord() {
      if (this.selected.length !== 1) {
        Message.warning("请选择一条数据查询回执记录");
        return false
      }
      if (this.selected[0].deliverStatus != 0) {
        Message.warning("请选择已审核的发货订单");
        return false;
      }
      this.receiptRecord = true;
      this.recordParams = {
        receiptPerson: '',
      }
      this.receiptShelfData = [];
      this.deliverReceiptFileData = [];
      queryReceiptData({deliverId: this.selected[0].id}).then(res => {
        this.receiptRecordData = res.data;
        if (res.data.length !== 0) {
          queryDeliverShelf({deliverReceiptId: res.data[0].id}).then(one => {
            this.receiptShelfData = one.data;
          })
          queryReceipt({deliverReceiptId: res.data[0].id}).then(two => {
            this.deliverReceiptFileData = two.data;
          })
        }
      })
    },
    receiptClick(row, column, event) {
      queryDeliverShelf({deliverReceiptId: row.id}).then(one => {
        this.receiptShelfData = one.data;
      })
      queryReceipt({deliverReceiptId: row.id}).then(two => {
        this.deliverReceiptFileData = two.data;
      })
    },
    /* 点击tab */
    handleClick(val) {
      console.log(val)
    },
    /* 上传附件 */
    handleUpload() {
      this.uploadFileDialog = true;
      this.fileList = [];
    },
    uploadUrl: function () {
      // 因为action参数是必填项，我们使用二次确认进行文件上传时，直接填上传文件的url会因为没有参数导致api报404，所以这里将action设置为一个返回为空的方法就行，避免抛错
      return ''
    },
    handleRemove(file, fileList) {
      console.log(file, fileList);
    },
    fileChange(file) {
      this.fileList = [];
      this.fileList.push(file.raw);
      console.log(this.fileList)
    },
    /* 生成uuid */
    generateUUID() {
      var d = new Date().getTime();
      if (window.performance && typeof window.performance.now === "function") {
        d += performance.now(); //use high-precision timer if available
      }
      var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
        var r = (d + Math.random() * 16) % 16 | 0;
        d = Math.floor(d / 16);
        return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);
      });
      return uuid;
    },
    /* 上传文件 */
    submitUpload() {
      if (this.fileList.length <= 0) {
        this.$message.error('请选择文件');
        return
      } else {
        // console.log("123" + JSON.stringify(this.fileList[0]))
        let form = new FormData()
        form.append('file', this.fileList[0])
        form.append('deliverId', this.selected[0].id)
        form.append('deliverReceiptId', this.receiptInfoForm.id)
        uploadReceipt(form).then(res => {
          // console.log(res)
          if (res.code === 200) {
            this.$message({
              message: '附件上传成功',
              type: 'success'
            });
            this.uploadFileDialog = false;
            queryReceipt({deliverReceiptId: this.receiptInfoForm.id}).then(res => {
              this.receiptFileData = res.data;
            })
          }
        })
      }
    },
    /* 取消 */
    cancelUpload() {
      this.uploadFileDialog = false;
      this.fileList = []
    },
    handleClose(done) {
      this.uploadFileDialog = false;
      this.fileList = []
    },
    //下载回执文件
    downloadReceiptFile(row) {
      // alert(JSON.stringify(row))
      this.download('/sales/deliver/downloadReceiptFile', {
        id: row.id
      }, row.fileName)
    },
    //删除回执文件
    delReceiptFile(id) {
      this.$confirm('此操作将移除选中数据，是否继续?', '提示', {
        confirmButtonText: '确定',
        cancelButtonText: '取消',
        type: 'warning',
      }).then(() => {
        delReceiptFile({id: id}).then(res => {
          this.$message.success(res.msg)
          queryReceipt({deliverReceiptId: id}).then(two => {
            this.deliverReceiptFileData = two.data;
            this.receiptFileData = two.data;
          })
        })
      }).catch(() => {
        this.$message({
          type: 'info',
          message: '已取消移除'
        });
      });

    },
    //保存回执信息
    saveReceipt(formName) {
      this.$refs[formName].validate((valid) => {
        if (valid) {
          this.receiptInfoForm.deliveryShelfList = this.shelfData
          receiptShelf(this.receiptInfoForm).then(res => {
            if (res.code === 200) {
              this.$message.success(res.msg)
            } else {
              this.$message.error(res.msg)
            }
            this.receiptDialog = false
          })
        } else {
          return false;
        }
      });
    },
    //取消回执
    cancelReceipt() {
      this.receiptDialog = false;
    },
    //导出
    handleExport(param) {
      let ids = [];
      if (this.selected.length > 0) {
        this.selected.forEach(item => {
          ids.push(item.id)
        })
      }
      // console.log(ids.toString())
      if (param === 0) {//导出流程卡
        this.download('/sales/deliver/exportDeliver', {
          ids: ids.toString()
        }, `发货单.xlsx`)
      } else if (param === 1) {//导出流程卡明细
        this.download('/sales/deliver/exportDeliverBus', {
          ids: ids.toString()
        }, `发货单明细.xlsx`)
      }
    },
    /* 打印发货单 */
    handlePrint() {

    },
    /* 发货单翻页后序号连贯 */
    getIndex($index) {
      //  表格序号
      return (this.pageNum - 1) * this.pageSize + $index + 1;
    },
    /* 发货复选框 */
    handleSelectionChange(val) {
      this.selected = val;
    },
    /* 行点击事件 */
    handleRowClick(row, column, event) {
      this.$refs.multipleTable.toggleRowSelection(row, column)
    },
    /* 发货单分页器 */
    handleChange(size, num) {
      this.pageSize = size;
      this.pageNum = num;
      this.queryParams.pageNum = this.pageNum;
      this.queryParams.pageSize = this.pageSize;
      this.handleQuery();
    },
  }

}
</script>

<style lang="scss" scoped>
.deliverTable {
  height: calc(100% - 100px);
}


::v-deep .receiptDialog {
  .el-dialog {
    height: 70%;
    min-height: 500px;
    //background-color: red;
    .el-dialog__body {
      height: calc(100% - 50px);

      .ipt2 {
        width: 30%;
        height: calc(100% - 5px);
        overflow: auto;

        .el-form-item {
          width: 90%;
          min-width: 270px;
        }
      }

      .receiptTable {
        width: calc(70% - 10px);
        height: 100%;

        .table {
          height: calc(100% - 5px);
        }

        .page {
          display: none;
        }
      }

      .receiptFileTable {
        height: calc(60% - 85px);
        min-height: 150px;

        .table {
          height: 100%;
        }

        .page {
          display: none;
        }
      }
    }
  }
}

::v-deep .receiptRecord {
  .el-dialog {
    height: 80%;
    //background-color: red;
    .el-dialog__body {
      height: calc(100% - 50px);

      .table {
        height: 100%;
      }

      .page {
        display: none;
      }

      .receiptRecordTable {
        margin-top: 10px;
        height: calc(50% - 50px);
        min-height: 100px;
      }

      .tabBtn {
        height: calc(50% - 20px);
        min-height: 150px;

        .el-tabs {
          height: 100%;

          .el-tabs__content {
            height: calc(100% - 55px);

            .el-tab-pane {
              height: 100%;

              .receiptTable {
                height: 100%;
              }
            }
          }
        }
      }
    }
  }
}

.uploadFileDialog {
  .el-dialog__body {
    & > div {
      display: flex;
      flex-direction: column;
      align-items: center;
    }

  }
}
</style>
